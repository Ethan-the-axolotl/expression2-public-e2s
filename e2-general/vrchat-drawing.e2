@name VRChat Drawing
@persist [Firing Ind ColorInd]:number
@persist [CurCol]:vector
@persist Spacing Delay Wep:string
if(first()){
    runOnKeys(owner(),1,array("mouse_right","r","u"))
    
    rangerPersist(1)
    rangerFilter(players())
    
    Delay = 0.1 #in seconds how long it takes to spawn a holo
    Spacing = 10 #space required between each holo to make another, 5 default
    Wep = "weapon_pistol"
}

if(changed(owner():isAlive()) & !owner():isAlive()){Firing = 0}

if(owner():weapon():type()==Wep){

    if(keyClkPressed()=="mouse_right"){
        
        Firing = keyClk(owner())==1 ? 1 : 0
    
    }elseif(keyClkPressed()=="r" & keyClk(owner())==1){
        ColorInd = ColorInd>=8? 1 : ColorInd+1
        CurCol = select(ColorInd,vec(255,0,0),vec(244, 158, 66),vec(244, 214, 65),vec(0,255,0),vec(0,0,255),vec(255,0,255),vec(0),vec(255))
        Text = select(ColorInd,"Red","Orange","Yellow","Green","Blue","Purple","Black","White")
        owner():soundPlay(2,0.5,"lostcoast.bomb_beep")
        printColor(vec(100),"Color changed to ",CurCol,Text)
    }elseif(keyClkPressed()=="u" & keyClk(owner())==1){
        holoDeleteAll()
        owner():soundPlay(3,0.5,"d3_citadel.timestop_explosion_3")
        printColor(vec(100),"Deleted all holos!")
    }
    
    if(Firing){
        timer("shoot",Delay/1000)
        
        if(clk("shoot")){
            Effect = effect()
            Effect:setEntity(holoEntity(Ind))
            Effect:play("propspawn")
        
            Pos = (owner():shootPos() + owner():eye():normalized()*50)
            
            if(holoEntity(Ind):pos():distance(Pos)>Spacing & !rangerOffset(1,Pos,vec()):hitWorld()){
                Ind = Ind>=holoMaxAmount() ? 0 : Ind+1
                if(!holoEntity(Ind)){holoCreate(Ind,vec(),vec(1),ang(),CurCol)}elseif(holoEntity(Ind):getColor() != CurCol){holoColor(Ind,CurCol)}
                holoPos(Ind,owner():shootPos() + owner():eye():normalized()*50)
                
                Rng = rangerOffset(120,owner():shootPos(),owner():eye())
                if(Rng:entity():isValid() | Rng:hitWorld()) {
                    holoAng(Ind,Rng:hitNormal():toAngle())
                    holoPos(Ind,Rng:pos())
                }else{
                    holoPos(Ind,owner():shootPos() + owner():eye():normalized()*50)
                    holoAng(Ind,owner():eye():toAngle())
                }
            }
            
        }
        
    }
    
    if(changed(Firing)){
    
        if(Firing){
            owner():soundPlay(1,inf(),"PhysicsCannister.ThrusterLoop")
            soundPitch(1,200)
            soundVolume(1,0.25)
        }else{
            soundStop(1)
        }
    }
    
}
